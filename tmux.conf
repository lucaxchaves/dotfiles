# add C-space as prefix
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix


unbind t
unbind c
bind t new-window -c "#{pane_current_path}"


# C-space + h => split horizontal
# C-space + v => split vertical
#bind h split-window -h -c "#{pane_current_path}"
#bind v split-window -v -c "#{pane_current_path}"
#unbind '"'
#unbind %

# Clear History (Ctrl+L)
bind -n C-k clear-history
bind-key -n C-l send-keys 'C-l'


# Control space + x to kill pane
bind-key x kill-pane

# Control space + & to kill window
bind-key & kill-window

set -g detach-on-destroy on  # don't exit from tmux when closing a session
set -g destroy-unattached on


bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

#add End and Home options
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# enable mouse
set -g default-terminal "xterm-256color"
set -g terminal-overrides ",xterm-256color:RGB"

set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set -g default-terminal "${TERM}"

set -g mouse on

#vim-like clipboard + xclip
set -g set-clipboard on


# start windows and panes with index based on 1
set -g base-index 1
setw -g pane-base-index 1     


setw -q -g utf8 on

#quiet mode
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# Scrollback buffer
set -g history-limit 50000

# allow for navigating between words with option
set-window-option -g xterm-keys on

# command delay? We don't want that, make it short
set -g escape-time 1

set -g display-time 4000



# Reduce time to wait for Escape key. You'll want this for neovim.
set-option escape-time 0

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 10

# Set window notifications
set -g monitor-activity on
setw -g monitor-activity on
set -g visual-activity on
set -g renumber-windows on    # renumber windows when a window is closed

# Update files on focus (using for neovim)
set -g status-keys emacs
set -g focus-events on
setw -g aggressive-resize on


#set -g status-right '#{prefix_highlight} #{cpu_temp_bg_color} CPU: #{cpu_percentage} - #{cpu_temp}#{gpu_temp_bg_color} GPU: #{gpu_percentage} - #{gpu_temp} RAM: #{ram_percentage}  | %a %h-%d %H:%M '



# Allow us to reload our Tmux configuration whil using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
setw -g mode-keys vi

set -g @t-fzf-default-results 'sessions' # show tmux sessions by default
set -g @t-fzf-find-binding 'ctrl-f:change-prompt(ÔÅº  )+reload(fd -H -d 2 -t d . ~)'
set -g @t-fzf-prompt 'üî≠ '

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin '2kabhishek/tmux-tilit'




set -g @t-bind "none"

#set -g @tilish-shiftnum '!"¬£$%^&*()'
#set -g @tilish-default 'main-vertical'
set -g @tmux_power_theme 'moon'
set -g @tmux_power_session_icon ''
set -g @tmux_power_prefix_highlight_pos 'LR'

run '~/.tmux/plugins/tpm/tpm'


